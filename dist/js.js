var myApp;(()=>{"use strict";var e={};(e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})})(e);const t=class{constructor(e){this.body=document.querySelector(e)}hide(){this.body.style.display="none"}show(){this.body.style.display="block"}remove(){this.body.remove()}},s="api_key=4218253ea3996b68858664a469ad2ba1",n="https://api.themoviedb.org/3",i="https://image.tmdb.org/t/p/w500";class o{constructor(){this.movies=[],this.HTMLChildren=[...document.getElementsByClassName("movie-container")]}start(){this.addEvents()}renderMovieList(e,t){if(0===e.length)v.moviesContainer.innerHTML='<p style="font-weight: bold;  font-size: 25px;">Ця полиця є пустою</p>',v.renderSwitcher(!1),this.changeMovieList([]);else{let s,n,a="";for(e.length<=20?[s,n]=[0,e.length]:[s,n]=this.calculatePage(t);s<n;s++){const t=e[s],n=s;if(!t)break;a+=`\n                    <div data-number="${n}" class="main__movie-container movie-container">\n        \n                            <div class="movie-container__movie" style="background: url(${o.checkPhoto(i+t.poster_path)}) no-repeat center  / cover;">\n        \n                                ${this.renderRating(t.vote_average,"movie-container")}\n        \n                                <div class="movie-container__blur-block"></div>\n        \n                                <div class="movie-container__more more">\n        \n                                    <div class="more__container">\n                                        <div class="more__point"></div>\n                                        <div class="more__point"></div>\n                                        <div class="more__point"></div>\n                                    </div>\n        \n                                </div>\n        \n                                <div class="movie-container__title-of-the-movie">\n                                    ${t.original_title}\n                                </div>\n        \n                            </div>\n        \n                    </div>\n                `}v.moviesContainer.innerHTML=a,this.changeMovieList(e)}}addEvents(){this.HTMLChildren.forEach((e=>{e.addEventListener("click",this.events.bind(this))}))}events(e){const t=e.target.closest(".movie-container").dataset.number,s=this.movies[t];b.render(s,t)}changeMovieList(e){this.movies=e,this.HTMLChildren=[...document.getElementsByClassName("movie-container")],this.addEvents()}isAdded(e){for(let t=0;t<p.shelves.length;t++)if(p.shelves[t].movies.find((t=>t.id==e)))return p.shelves[t].name}static checkPhoto(e){return"https://image.tmdb.org/t/p/w500null"===e?"Photo/NoImageFound.jpg.png":e}renderRating(e,t){let s;return e>=8?s="green":e>5?s="yellow":e>0&&(s="red"),`\n        <div class="${t}__ratingrating-container rating-container">\n            <div class="rating-container__color rating-container__color-${s}">\n                ${e}\n            </div>\n        </div>\n        `}calculatePage(e){let t,s;return 1==e||2==e?(t=1==e?0:+`${e}0`,s=t+19):(s=20*e-1,t=s-19),[t,s]}findHTMLChildByindex(e){return this.HTMLChildren[e]}reduceNumber(e){for(let t=e;t<this.HTMLChildren.length;t++){const e=this.HTMLChildren[t].dataset.number-1;this.HTMLChildren[t].dataset.number=e}}addComent(e,t){this.movies[e].coments.push(t),localStorage.setItem("shelves",JSON.stringify(p.shelves))}deleteHTMLChild(e){for(;e>=20;)e-=20;this.HTMLChildren[e].remove()}}const a=o;class d extends t{constructor(){super(".main"),this.moviesContainer=document.querySelector(".main__grid-movies-container"),this.switcher=this.body.querySelector(".main__page-switcher")}start(){this.switcher.addEventListener("click",d.switcherFunctional.bind(this))}renderSwitcher(e=500,t=1){if(!1===e)return this.switcher.innerHTML="",!1;let s="",n=t-2;for(let i=0;i<5;i++)n<=0||n>e?n++:n!=t?(s+=`<li class="page-switcher__page">${n}</li>`,n++):(s+=`<li class="page-switcher__page page-switcher__active-page">${n}</li>`,n++);this.switcher.innerHTML=`\n            <ul class="page-switcher__pages">\n                ${s}\n            </ul>\n        `,this.switcher.dataset.curentpage=t}static switcherFunctional(e){let t=e.target.closest(".page-switcher__page");t&&(p.switchPages(t.textContent),v.body.scrollTo({top:0,left:0,behavior:"smooth"}))}}const r=d,c=class{constructor(){this.shelves=JSON.parse(localStorage.shelves||"[]"),this.HTMLBodies=[...document.getElementsByClassName("shelf")],this.shelvesContainer=document.querySelector(".aside__shelves-container")}start(){localStorage.shelves||localStorage.setItem("shelves","[]"),this.renderShelves()}renderShelves(){const e=this.shelves.reduce(((e,t)=>e+`\n                    <div class="shelf" data-id="${t.id}" data-active="false" >\n\n                        <div class="shelf__container">\n                    \n                            <div class="shelf__foto-container">\n                                <img src="${t.photo}" alt="">\n                            </div>\n                    \n                            <div class="shelf__info-container">\n                                <div class="shelf__name"> ${t.name}</div>\n                                <div class="shelf__amount-of-movies">${t.movies.length} Фільмів</div>\n                            </div>\n                    \n                            <div class="shelf__settings settings">\n                                <div class="settings__dot"></div>\n                                <div class="settings__dot"></div>\n                                <div class="settings__dot"></div>\n\n                                \n                                <div class="settings__additional-menu additional-menu">\n                                    <ul class="additional-menu__list">\n                                        <li data-action="edit" class="additional-menu__item">Редагувати</li>\n                                        <li data-action="delete" class="additional-menu__item">Видалити</li>\n                                    </ul>\n                                </div>\n                                \n                                <div class="settings__arrow-container">\n                                    <div class="settings__arrow"></div>\n                                </div>\n                            </div>\n                                            \n                        </div>\n                    \n                    </div>\n            `),"");this.shelvesContainer.innerHTML=e,this.reSetHtmlShelves()}reSetHtmlShelves(){this.HTMLBodies=[...document.getElementsByClassName("shelf")],this.addListeners()}addListeners(){for(let e=0;e<this.HTMLBodies.length;e++){let t=this.HTMLBodies[e];"true"!==t.dataset.listener&&(t.dataset.listener&&(t.dataset.listener="true"),t.addEventListener("click",this.events.bind(this)))}}events(e){const t=e.target,s=t.closest(".settings"),n=t.closest(".shelf").dataset.id,i=this.findShelfById(n),o=t.dataset.action;o?("edit"===o&&f.show(i.name,i.photo,n),"delete"===o&&this.deleteShelf(n)):s||this.makeActive(n)}deleteShelf(e){const t=this.findShelfById(e,!0),s=-1===t?"":`ви точно хочете видалити полицю ${this.shelves[t].name}`;-1!==t&&confirm(s)&&(this.shelves.splice(t,1),localStorage.setItem("shelves",JSON.stringify(this.shelves)),this.renderShelves(),w.showRecommendation(),this.makeActive(1))}addShelf(e){this.shelves.push(e),localStorage.setItem("shelves",JSON.stringify(this.shelves)),this.renderShelves()}editShelf(e,t){const s=this.findShelfById(t,!0),n=this.shelves[s];Object.assign(n,e),localStorage.setItem("shelves",JSON.stringify(this.shelves)),this.renderShelves()}makeActive(e){v.switcher.dataset.searched=!1,this.HTMLBodies.forEach((t=>{const s=t.querySelector(".shelf__container");t.dataset.id==e?(s.classList.add("shelf__container_active"),t.dataset.active=!0,this.showShelf(e),_.autoOff()):(s.classList.remove("shelf__container_active"),t.dataset.active=!1)})),v.body.scrollTo({top:0,left:0,behavior:"smooth"})}showShelf(e){if(1!=e){let t=this.findShelfById(e);if(t.movies){const e=Math.ceil(t.movies.length/20);g.renderMovieList(t.movies,1),v.renderSwitcher(e,1)}}}findActiveShelf(){return this.HTMLBodies.find((e=>"true"==e.dataset.active))}switchPages(e){const t=this.findActiveShelf();let s,n;if(t&&(s=t.dataset.id,n=this.findShelfById(s)),"true"==v.switcher.dataset.searched){const t=M.input.dataset.request;M.search(null,t,e)}else if(this.isAsync(t))w.showRecommendation(e);else{const t=Math.ceil(n.movies.length/20);g.renderMovieList(n.movies,e),v.renderSwitcher(t,e)}}isAsync(e){return!!e.dataset.async}getNewId(){let e=Math.round(1e6*Math.random());for(let t=0;t<this.shelves.length;t++)if(this.shelves[t].id===e)return this.getNewId();return e}findShelfById(e,t){return t?this.shelves.findIndex((t=>t.id==e)):this.shelves.find((t=>t.id==e))}addMovie(e,t){const s=g.isAdded(t.id);if(s)return alert(`Цей фільм вже додано на полицю "${s}"`),!1;t.coments=[],this.findShelfById(e).movies.push(t),localStorage.setItem("shelves",JSON.stringify(this.shelves)),this.renderShelves()}};class l extends c{constructor(){super(),this.body=document.querySelector(".shelf-in-the-top"),this.amount=this.body.querySelector(".shelf__amount-of-movies")}start(){delete this.HTMLBodies,delete this.shelves,delete this.shelvesContainer,v.switcher.dataset.searched=!1,this.body.addEventListener("click",this.showRecommendation.bind(this)),this.showRecommendation()}static getUrl(e){let t;return t=e?`${n}/discover/movie?sort_by=popularity.desc&${s}&page=${e}`:`${n}/discover/movie?sort_by=popularity.desc&${s}`,t}static makeRequest(e){return fetch(e).then((e=>e.ok?e.json():e.json().then((e=>{throw alert(e.status_message),e})))).catch((e=>!1))}showRecommendation(e){let t=l.getUrl(e);l.makeRequest(t).then((e=>!!e&&(this.amount.textContent=`${e.total_results} фільмів`,v.renderSwitcher(500,e.page),g.renderMovieList(e.results),!0))).then((e=>{e||(v.moviesContainer.innerHTML='<p style="font-weight: bold;  font-size: 25px;">Проблема з сервером</p>')}))}}const h=l,m=new class extends t{constructor(){super(".blur-block")}create(e){let t=document.createElement("div");t.classList.add("blur-block"),t.innerHTML='\n        <div class="blur-block__cross">\n            <div class="blur-block__line-1">\n                <div class="blur-block__line-2"></div>\n            </div>\n        </div>\n        ',this.body=t,document.body.prepend(t),e&&this.body.addEventListener("click",e.remove.bind(e))}remove(){super.remove(),this.body=null}},v=new r,u=new class extends t{constructor(){super("header"),this.menuButton=document.querySelector(".header__menu ")}start(e){this.menuButton.addEventListener("click",e.onOff.bind(e))}},_=new class extends t{constructor(){super(".aside"),this.backArrow=this.body.querySelector(".aside__arrow-back"),this.addShelfButton=this.body.querySelector(".aside__add-bhelf-button")}start(){this.backArrow.addEventListener("click",this.onOff.bind(this)),this.addShelfButton.addEventListener("click",this.addShelf.bind(this))}onOff(e){e&&e.stopPropagation(),this.body.classList.toggle("aside_on")}addShelf(e){e.stopPropagation(),f.show()}autoOff(){window.innerWidth<=1e3&&this.onOff()}},f=new class extends t{constructor(){super(".shelf-editor"),this.photoUrlInput=this.body.querySelector(".shelf__editor-form").photoInput,this.photoSection=this.body.querySelector('[name="photo"]'),this.nameInput=this.body.querySelector(".shelf__editor-form").nameInput,this.nameSection=this.body.querySelector('[name="name"]'),this.img=this.body.querySelector(".shelf-editor__photo-container img"),this.executeButton=this.body.querySelector(".shelf-editor__button")}start(){this.executeButton.addEventListener("click",this.execute.bind(this)),this.photoUrlInput.addEventListener("blur",this.checkPhotoInput.bind(this)),this.photoUrlInput.addEventListener("focus",this.deleteWaring.bind(this)),this.nameInput.addEventListener("blur",this.checkNameInput.bind(this)),this.nameInput.addEventListener("focus",this.deleteWaring.bind(this))}show(e,t,s){this.deleteWaring(),super.show(),m.create(this),this.body.dataset.shelf_id=s||"",this.photoUrlInput.value=t||"",this.img.src=t||"Photo/notfound1.png",this.nameInput.value=e||""}createWaring(e){let t=document.createElement("p");return t.classList.add("shelf-editor__waring"),t.textContent=e,t}deleteWaring(e){if(e){let t=e.target.closest("section"),s=t.querySelector(".shelf-editor__waring");t===this.nameSection&&(this.nameInput.style.cssText="border: 1px solid grey;"),s&&s.remove(),t.querySelector(".shelf-editor__waring")&&this.deleteWaring()}else{let e=this.body.querySelector(".shelf-editor__waring");e&&e.remove(),this.nameInput.style.cssText="border: 1px solid grey;",this.body.querySelector(".shelf-editor__waring")&&this.deleteWaring()}}checkPhotoInput(){this.img.src=this.photoUrlInput.value||"Photo/notfound1.png";let e=this.createWaring("Якщо фото не зявилося то URL пошкоджено, спробуйте інше");this.photoSection.append(e)}checkNameInput(){let e=this.nameInput.value;e=e.replace(/ /gm,"");let t=this.createWaring("Вкажіть ім'я");return t.style.cssText="color: red;",!!e||(this.nameSection.append(t),this.nameInput.style.cssText="border: 1px solid red;",!1)}execute(e){if(e.preventDefault(),this.deleteWaring(),this.checkPhotoInput(),this.checkNameInput()){let e=this.body.dataset.shelf_id;e?this.edit(e):this.create(),this.hide(),m.remove()}else alert("Перевірте полля вводу інформації")}edit(e){let t={};t.name=this.nameInput.value,t.photo=this.photoUrlInput.value,p.editShelf(t,e)}create(){let e={};e.name=this.nameInput.value,e.photo=this.photoUrlInput.value,e.movies=[],e.id=p.getNewId(),e.async=!1,p.addShelf(e)}remove(){super.hide(),m.remove()}},p=new c,g=new a,b=new class extends t{constructor(){super(".movie-info"),this.functionsSection=null}render(e,t){let s=document.createElement("div");s.classList.add("movie-info"),s.dataset.id=e.id,s.dataset.index=t,s.innerHTML=`\n            <section class="movie-info__photo-section" name="photo">\n\n                <div class="movie-info__photo-container">   \n                    <img src="${a.checkPhoto(i+e.poster_path)}" alt="">\n                </div>\n\n            </section>\n\n            <section class="movie-info__info-section" name="info">\n\n                <div class="movie-info__name">\n                    ${e.original_title}\n                </div>\n\n                <div class="movie-info__overview">\n                    <div class="movie-info__section-name">description:</div>\n                    ${e.overview}\n                </div>\n\n                <div class="movie-info__release-date">\n                    <div class="movie-info__section-name">release date:</div>\n                    ${e.release_date}\n                </div>\n            </section>\n\n            <section class="movie-info__rate-section" name="rate">\n\n                ${g.renderRating(e.vote_average,"movie-info")}\n\n            </section>\n\n            <section class="movie-info__functions-section" name="functions">\n                ${this.renderButtons(e.coments)}\n            </section>\n\n            <section class="movie-info__video-section" name="video">\n                \n            </section>\n\n            <section class="movie-info__coments-section" name="coments">\n                ${y.renderComents(e.coments)}\n            </section>\n        `,this.changeBody(s),this.changeFunctionsSection(),this.addEvents(),m.create(this),this.renderVideo(e)}renderButtons(e){return e?'\n            <button data-action="coment" class="movie-info__add-coment-button">коментувати</button>\n            <button data-action="delete" class="movie-info__delete-button">Видалити</button>\n            ':'<button data-action="add" class="movie-info__add-to-shelf-button">додати на полицю</button>'}addEvents(){this.functionsSection.addEventListener("click",this.events.bind(this))}events(e){const t=e.target,s=t.closest("button").dataset.action,n=(t.closest(".movie-info").dataset.id,t.closest(".movie-info").dataset.index);"add"===s&&S.render(this.body.dataset.index),"delete"===s&&this.deleteMovie(n),"coment"===s&&L.render(n)}changeBody(e){document.body.append(e),this.body=document.querySelector(".movie-info")}changeFunctionsSection(){this.functionsSection=this.body.querySelector(".movie-info__functions-section")}remove(){super.remove(),m.remove()}deleteMovie(e){if(!confirm("Ви впевненні що хочете видалити цей фільм?. При видаленні цього фільму видаляться всі ваші коментарі!!!!"))return!1;g.movies.splice(e,1),localStorage.setItem("shelves",JSON.stringify(p.shelves)),g.deleteHTMLChild(e),g.reduceNumber(e),b.remove(),p.renderShelves()}renderVideo(e){const t=`${n}/movie/${e.id}/videos?${s}`,i=this.body.querySelector(".movie-info__video-section");fetch(t).then((e=>e.json())).then((e=>e.results.reduce(((e,t)=>"YouTube"===t.site&&"Trailer"===t.type?e+`\n                    <div class="movie-info__section-name">${t.name}</div>\n                    <iframe class="movie-info__video" width="560" height="315" src="https://www.youtube.com/embed/${t.key}" title="${t.name}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`:e+""),""))).then((e=>i.innerHTML=e))}},y=new class{constructor(){this.coments=[],this.HTMLBodies=[...document.querySelectorAll(".coment")]}changeComents(e){this.coments=e}changeHTMLBodies(){this.HTMLBodies=[...document.querySelectorAll(".coment")]}renderComents(e){return e?(this.changeComents(e),setTimeout(this.changeHTMLBodies.bind(this,100)),setTimeout(this.addEvents.bind(this,100)),e.reduce(((e,t,s)=>e+`\n            <div data-index="${s}" class="movie-info__coment coment">\n\n                <div class="coment__additional">\n\n                    <div class="coment__section-name">Coment: ${s+1}</div>\n\n                    <div class="coment__settings settings">\n                        <div class="settings__dot"></div>\n                        <div class="settings__dot"></div>\n                        <div class="settings__dot"></div>\n\n                        <div class="settings__additional-menu additional-menu">\n                            <ul class="additional-menu__list">\n                                <li data-action="edit" class="additional-menu__item">Редагувати</li>\n                                <li data-action="delete" class="additional-menu__item">Видалити</li>\n                            </ul>\n                        </div>\n                        <div class="settings__arrow-container">\n                            <div class="settings__arrow"></div>\n                        </div>\n                        \n                    </div>\n\n                </div>\n                <div class="coment__text">\n                    ${t}\n                </div>\n            </div>\n            `),"")):""}addEvents(){this.HTMLBodies.forEach((e=>{e.addEventListener("click",this.events.bind(this))}))}events(e){const t=e.target,s=t.closest(".coment").dataset.index,n=t.closest(".movie-info").dataset.index,i=t.dataset.action;if(!i)return!1;"delete"==i&&confirm("Ви точно хочете видалити цей коментар")&&this.delete(s),"edit"==i&&this.callEditor(n,s)}delete(e){this.HTMLBodies[e].remove(),this.coments.splice(e,1),localStorage.setItem("shelves",JSON.stringify(p.shelves))}edit(e,t){this.coments.splice(e,1,t),localStorage.setItem("shelves",JSON.stringify(p.shelves))}callEditor(e,t){const s=this.coments[t];L.render(e,t,s)}},S=new class extends t{constructor(){super(".ask-shelf")}changeBody(){this.body=document.querySelector(".ask-shelf")}render(e){b.remove();const t=`\n            <div class="ask-shelf" data-index="${e}" >\n                <div class="ask-shelf__content">\n                    <form name="addShelf" class="ask-shelf__form" action="#">\n\n                        ${this.renderRadio()}\n\n                        <div class="ask-shelf__button">\n                            <button data-action="cancel">Відмінити</button>\n                            <button data-action="add">Додати</button>\n                        </div>\n                     </form>\n                 </div>\n            </div>\n            `;document.body.insertAdjacentHTML("afterbegin",t),this.changeBody(),this.addEvents(),m.create(this)}renderRadio(){return p.shelves.reduce(((e,t)=>e+`<div class="ask-shelf__input">\n                            <input name="shelf" value="${t.id}" id="${t.id}" type="radio">\n                                <label for="${t.id}">\n                                    <div class="ask-shelf__check"></div>\n                                    <span>${t.name}</span>\n                                </label>\n                        </div>`),"")}addEvents(){[...this.body.querySelectorAll("button")].forEach((e=>{e.addEventListener("click",this.events.bind(this))}))}events(e){e.preventDefault();const t=e.target.dataset.action;"cancel"===t&&this.remove(),"add"===t&&this.addToShelf()}addToShelf(){const e=document.forms.addShelf.shelf,t=e.length?[...e]:[e];for(let e=0;e<t.length;e++)if(t[e].checked){const s=t[e].value,n=this.body.dataset.index,i=g.movies[n];p.addMovie(s,i),this.remove()}}remove(){const e=this.body.dataset.index;m.remove(),b.render(g.movies[e],e),super.remove()}},w=new h,L=new class extends t{constructor(){super(".coment-editor")}render(e,t,s){b.remove();let n=document.createElement("div");n.classList.add("coment-editor"),n.dataset.index=e,n.dataset.editingComent=t||"false",n.innerHTML=`\n        <form name="comentForm" class="coment-editor__form" action="#">\n\n            <textarea class="coment-editor__textarea" name="coment">${t?s:""}</textarea>\n\n            <div class="coment-editor__buttons-container">\n                <button class="coment-editor__cancel-button" data-action="cancel">Відмінити</button>\n                <button class="coment-editor__coments-button" data-action="${t>=0?"edit":"coments"}">${t>=0?"Редагувати":"Коментувати"}</button>\n            </div>\n\n        </form>\n        `,document.body.append(n),this.changeBody(),this.addEvents(),m.create(this)}changeBody(){this.body=document.querySelector(".coment-editor")}addEvents(){this.body.querySelector(".coment-editor__buttons-container").addEventListener("click",this.events.bind(this))}events(e){e.preventDefault();const t=e.target.dataset.action;"cancel"===t&&this.remove(),"coments"===t&&this.addComent(),"edit"===t&&this.editComent()}addComent(){let e=document.forms.comentForm.coment.value.trim();if(!e.replace(/ /gm,""))return alert("Ви не ввели жодного тексту"),!1;{const t=this.body.dataset.index;g.addComent(t,e),this.remove()}}editComent(){let e=document.forms.comentForm.coment.value.trim();if(!e.replace(/ /gm,""))return alert("Ви не ввели жодного тексту"),!1;{const t=this.body.dataset.editingComent;y.edit(t,e),this.remove()}}remove(){const e=this.body.dataset.index;m.remove(),b.render(g.movies[e],e),super.remove()}},M=new class extends t{constructor(){super(".header__form"),this.input=this.body.querySelector(".header__input"),this.button=this.body.querySelector(".header__button")}start(){this.button.addEventListener("click",this.search.bind(this)),this.input.addEventListener("input",this.renderRecommendation.bind(this)),this.input.addEventListener("blur",(()=>setTimeout(this.removeRecList.bind(this),100)))}search(e,t,s){e&&e.preventDefault(),t||(t=this.input.value),p.makeActive(0),v.switcher.dataset.searched=!0,this.input.dataset.request=this.input.value,this.getSearchedMovies(t,s).then((e=>{g.renderMovieList(e.results),v.renderSwitcher(e.total_pages,e.page)})),this.removeRecList()}getSearchedMovies(e,t){const i=n+"/search/movie?"+s+`&query=${e}`;return t?fetch(i+`&page=${t}`).then((e=>e.json())):fetch(i).then((e=>e.json()))}renderRecommendation(){this.removeRecList();const e=this.input.value;this.getSearchedMovies(e).then((e=>{const t=e.results;if(t&&t.length>0){t.length=window.innerWidth<=1e3?5:10;let e=`\n                <div class="header__recommendation">\n                    <ul class="header__recommendation-list">\n                        ${t.map((e=>`<li class="header__recommendation-item">${e.original_title}</li>`)).join("")}\n                    </ul>\n                </div>\n                `;this.body.insertAdjacentHTML("afterend",e),this.recListAddFunctions()}}))}removeRecList(){const e=document.querySelector(".header__recommendation");e&&(e.remove(),this.removeRecList())}recListAddFunctions(){document.querySelector(".header__recommendation").addEventListener("click",this.recListFunctions.bind(this))}recListFunctions(e){const t=e.target.closest(".header__recommendation-item");if(t){const e=t.textContent;this.search(null,e),this.input.value=e}}};p.start(),v.start(),g.start(),u.start(_),_.start(),f.start(),M.start(),w.start(),myApp=e})();